Assumptions:
A, B, C, D, E, F, P: Point
distinct(A, B, C, D, E, F, P)
P in Circle(A, B, C)
D in Line(B, C)
E in Line(A, C)
F in Line(A, B)
angle(P, D, B) == angle(P, E, C) mod 360
angle(P, D, B) == angle(P, F, A) mod 360

Embedding:
C := {"x": "0.6171925345131008544541373339598067104816436767578125", "y": "-0.786812160138171012846441954025067389011383056640625"}
B := {"x": "0.90418060778235453955886669064057059586048126220703125", "y": "0.4271503581999340770636308661778457462787628173828125"}
A := {"x": "0.9994792789637132468527624951093457639217376708984375", "y": "0.032267180263789274619057323434390127658843994140625"}
P := {"x": "-0.99379507110805428770206764176430876466066592250070826252868189915225698294066276233629508617150136124639248325632025898118004143522871301329577813252750312881699230898204634809695989375674956843404848321646128523254394900361849662132377343243878750946403308142290330202579012157875276027583248784800422765166532959215235625923675023632316116745353625300282507972845372256199970822271338864544725912966803934711853470826126785000737237166408393739266009336834259504075037168329334848295740181590514303377446801246251244891731511907174198929839400001783789787898092819710166610969893681489756298921028262798094971945694961019224921366892692914522164218219569706279976053264430315661273236371891563910802302475229097689778880897309381675473295775203485073581893428201958823470963110146997032051147344675496399155583314255819386579997197656326727616205963205109358328950795380198763035518019805482537609805320909090335498841260539953812209987458737541851450016149288118945036588506939696081714183398013724770337604337877906912963227770043478804777420999429546050559245853108633564192979647566334609187223586800922102949447311348296565894439168425528310654883614825631644658770268886081851385398825380232711518465275071896473731096835770451629193112749870438663836449037090679820725986651791159476307961597440984048496038489087064716024934982811109323381576368220538282855702405754129474468520046425097365087435144036280968964901232307000617685206598307470404366540699965232067898874804493605539980530020249882702734642187226976681552900374450592405393353978104297264469851025924136931390927760101231243064198513022541236048315603551103246246169405593953080224323846215867013981300887983105197344361723085017141989295618252498353341453357332150985671087837803805281231695635040492839673452510852025542294462837182658880258622267057603676240733525645234219596143094014220074154908184294423969672536341005981678430422106002417339227952095893082287831393272534153384086579787973123838472476448261177250574056", "y": "-0.111226600421562119714856091162560679712693157568033583725519535774343771239055265894840792931679741891896334656272729262468810864882298702913942365902313024125956032016554057911876714218951460721345250256859369160811074083293998024277040586098126912854340185278649049333633870037128611888790044420936254221831922159076532084148727014618775987284197826445088872370060330048131595085095942015579622316912330050678228142928129234920271920081173747687256552365568490006022631644026523085861319695427132787560816996129034626492408243287115509201515138741539772143059741902956635765570555937765241321106015495160625258209503226515842292804534225220849612527919314981164807756321198898388198982211083088294539428409092347581051557086663110754938412446038160275014715496529123329827491669898479440152290178028057625685516240286023628896977881918463427629923124912196938541898617694393904460082206414866389513304789804761441366241231390584781927982146714155550386119111470669806016171994334978808242692098968994144752434424568316697947106785274186391912543827514185174730356813452592256029336271835345536720276058561311668551141759630322468069578079440460894001498870857899485985543586868740015218118406229728373364422093507198232890944240349790403848764209635777712611922882227169045091903747123283842034759522275054324432268511283667978012445593559174126834960805162826967791919174846979630746838980867797742444415210292792067252240709223066084403846056744735853425646602151027587705114174580800413648307165451471158238158848088579490560334307924563486121436718549040762116339562183317842792272575375732591829574706720546806274104610962774248320515496869014194554829311526157693086975264480129756175338348063187148745226010166609648900597257233903807076771234092511037693935387501513070957108867793534897114905468447534194084787660220560560684920543910645846682541264132839542803737287914602486250605208921787583936467154441367385666858898296474467833551284917460358622002945633956243280934890683071690284"}
F := {"x": "1.0844318485472344333505593357021924912214681520413166839335471409479227933303491226979531347751617431640625", "y": "-0.319745499820088860784446974718366920959906409369417196404659117607571783281628086115233600139617919921875"}
D := {"x": "0.5443673371186365957852849868830320113848250416216524506166934364348375177098253691437063817045263410183709294786866614386153810360165365409913218623617989987346877639008617793830514166911169244200174781682000101634951163856755532556152890144335480982962558860972850228412914681635113643673540920424136095983009986747499780996939321052747892217479561044008537564466573829540035138465456502362143277552929903551022417800861868920524850557303897336161010686309186512551721337821352508560388199317486297790560055366819327874353073641355357610436882654321817277005300376989171282341584279533075929081886077099897397868655780382914053067297187452454949414011243085361455015057493145480643855361930019734817017773744924653152249643334162544065343299919050331150694742235058492177000415441913651774540009475911300992954594928239657720474925549878727996862824506791915275517765393507880453560452735727390573025836899728397640800281713370313726971263859454639164892609803465540111719550874075668893740232739907504054509213680243410095434247052768781709658454934258017056862204433041580909221786571013050544852725390913956919129263419750636004086758790823387537867490539294824385899656598603423303039557855098794991446041150468873197570268313333187712224598086520549293714427871758040979394688115678376380571088271328365513471062734798158728386958663644451874383350992389892901608544183296861557242151316278577533779526151502819272487585299087795210856661537752584049357082393524176114686172544618549527904754399796101874201744977432024886287975021659520147228828091845585521989183800806862691192841847810274501664532931534181632316677385051659875602985152228224172200847696056152031612108004212679206807243345168079436386295952123253605672427698487108766580971286480738560030020490307590337117499297809571671177093734676857303148297829242833110652870569426881648741304112502834040980118536024946228698633547656252084531241326614988588289984253848865710888073869920657047044036741161396076010937777898060277437", "y": "-1.0948634983709953525770554369720222686001661784357544342912520211031748857309168500620295203122858871316049097847714461624236001153045810640678438719335019453810902226431640691093661593027112942422533154718378483713451086153182671052886568800110202409876909690260452406523419289301303288890778517016682956817896332876996988885473798722904109855483276172354230051826045103007764973450455988642631623872975981177912043143165199917655756778193774795756003363500083111721827292163051276360646616909482095044094143674080545222513773187321097931403523692286389969654069981345516296175540854503610033282362366371701444141644428054431120203561119166260079523262159871786613549715073902118440980423300868461543736698704513000096773425431441572135937311845662526313350247771359631380366332489735526740147507209518243217620459374212301978905869441126198727862854840358257990321173326539052232778396832399657126093103001570519401702876050875951663025513243002534034718691599962880269506263842379655754509972131485195692601170973775037945910831161950776125689206093460792504014693920239470188062850267160812754430393036260824038567509773505896636776032900408334239066244071354986191043344152400047183586503280376890270696668428965230227147233747946888017222415345292285068188584308218174060850940603302951680074511401306869669262606083021166319161398502384984132631254805470563813854071342318274889933074766078639589314956343051468604143318740339693250033584456373456157273014484993388636966100306195472404023147289863665782956917051704985387635720821436713971261045697774707587291037061936256121401270207800021131097830448179452494792531350819160078312295684363913042538775236370475324042925661432116677809450043431741414720284843723163733551916457983915969063246387303574732947873508765865372804728478487381870812641405742737820905429755447341705278564297591208486478102632270358844752742099443985051490870164672584192581926793674083214503260366231004495578777336667845956027051916387809064232082723425767865252"}
E := {"x": "0.32945469951550582035371265340641688291806782341263295889735790738049118907744402544702375007833352816154658281220161387034109861053313055111009905100269133822225372128762592005575897049458902408165399454168986527402851151175178862269887200072235834143377399887165785483225488246539252762563740184800719956662637218380356833658147468940280995682295544767203564257982827332915397740663041687748731282607114682246940812515587773155369824731832392273977471171139947553824356992503488284736331070355900067596232919646866751286002580174620553641072415967879544394349369205379236082815162975034306865178567598343584294214421912212499331147635255763223749410518353538815580996008970384084985958568037737797691402782941986840836812286052620450673675665307433105210160130658815296192181775041092498251780710962561017638369070295024529931982738496398775363903703484400627509759240658679258811615568273274342022119538005199276166673491776296629434115838964118951530754359502767948981606805748823440936948526939220214305020756352712812598532972120541238497095248439426935560588306059661061755208904568260708692369346178087911298628392123094511124299411143473382429744566469892149968235525857040476716950539014222682955685170987536337016766542619603601805135317483972118514866754691112926585229457794605107187684361030789318487939568810667070689950515539347464055994443777884777261607760831656371675356014902248322750045866516160319389927677707055805699503078365568450699289715917924315493601238987784058228862032369164871145342207263897191286058721958255364617490115264768476179655636716602171082393357347137838079946455443656874984775603207003331351932396658036536510737216073017607510338622047559227563330016706089536243384665392706909705428099201163749045146797064611741689755061957314705327871393791337472922346346439598329874743441374322104368396974679459598662634297450968576276346364435390485878254171774087284156692584082007330501113397024492672347069689042032731516749448180872109699025398200251118766749", "y": "-1.4033130446697970597436434496808702411650599682748372872474959218054849756393522398128356378012265130785575019717073632130995377934457566153034953267757343211368720804404049379692084707865115119687530377189659046492880878665527953258706173816587772058065280679041188033467635232819154134994494292627651821767706126480071190277138325146852297459387112599652103601289713742845165381771831225901317033747819812946425475158608078130158336653279866410156574126683015027707341269755600422024627924625364842866257394027668277003635106414867858523895592618042445896934797073608675402571449740347891848089437684180060814913235041388117093962688953527173995435494745679311932913870471727869082117031420945868187183871107083223410750961780181359717617403333082676231935129714778230938810274410349744426553834077491938963775669009912222713669934840711705457035017782135734021864127804187758528707260178909360678838847030457802796451220879768286331346608157554532423515166864346097294925868290665951488130001965855328433208497259316005897223521356915998701475541025936577109854195199876713132858229960423044410518787019097852487557039078520996179560752523675828984764295462427945897835096105176912238977021117569334487049916306297493236732743946513863536036031518770537353305331506366015528984934517919336838106842017698461201380729540707541285363933048827182541372441511516198597818163556155079804025619493508856551191029379925864899006554146984718750467081354669277968406149518706240482033199580542551637946455135102476191072801768850130689257785381677054554172958106301788375266815053370526594031605952397629412649663438158664417060006468375172173223105370830466471768842153824016322617405542464787392731905674391082252702928004096217276531108318559906381710883091162894868295992601914178062201284685573043940264888446444370767547023531779331626345547868206345856302554094441672153975133381220755065993856640307222286038094046454208071575492132693915436424594490760600810052621474664811832472190481634954122548"}

Need to prove:
collinear(D, E, F)

Proof:
By in_imply_collinear on D, C, B we get collinear(B, C, D)
By in_imply_collinear on F, A, B we get collinear(A, B, F)
By in_imply_collinear on E, C, A we get collinear(A, C, E)
By angles_on_chord_v1 on C, P, B, A, Circle(A, B, C) we get angle(C, A, P) == angle(C, B, P) mod 360
By reverse_direction on F, A we get 180 == direction(F, A) - direction(A, F) mod 360
By reverse_direction on F, P we get 180 == direction(F, P) - direction(P, F) mod 360
By angles_on_chord_v0 on B, P, A, C, Circle(A, B, C) we get angle(B, A, P) == angle(B, C, P) mod 360
By angles_on_chord_v1 on B, A, C, P, Circle(A, B, C) we get angle(B, C, A) == angle(B, P, A) mod 360
By same_angle_v2 on A, B, F, P we get angle(B, A, P) == angle(F, A, P) + 180 mod 360
By same_angle_v2 on C, A, E, B we get angle(A, C, B) == angle(E, C, B) + 180 mod 360
By same_angle_v0 on D, B, C, P we get angle(B, D, P) == angle(C, D, P) mod 360
By same_angle_v0 on F, A, B, P we get angle(A, F, P) == angle(B, F, P) mod 360
By reverse_direction on C, A we get 180 == direction(C, A) - direction(A, C) mod 360
By reverse_direction on B, C we get 180 == direction(B, C) - direction(C, B) mod 360
By reverse_direction on P, B we get 180 == direction(P, B) - direction(B, P) mod 360
By concyclic_sufficient_conditions_v0 on P, F, B, D we get concyclic(B, D, F, P)
By concyclic_sufficient_conditions_v0 on C, E, P, D we get concyclic(C, D, E, P)
By concyclic_definition_0 on F, B, D, P we get P in Circle(B, D, F)
By concyclic_definition_0 on D, E, C, P we get P in Circle(C, D, E)
By angles_on_chord_v0 on P, E, D, C, Circle(C, D, E) we get angle(P, C, E) == angle(P, D, E) mod 360
By angles_on_chord_v1 on B, F, P, D, Circle(B, D, F) we get angle(B, D, F) == angle(B, P, F) mod 360
By same_angle_converse_v1 on D, E, F, P we get collinear(D, E, F)
