Assumptions:
A, B, C, D: Point
c: Circle
distinct(A, B, C, D)
distinct(Line(A, B), Line(A, D), Line(B, C), Line(C, D))
tangent(Line(A, B), c)
tangent(Line(B, C), c)
tangent(Line(C, D), c)
tangent(Line(A, D), c)
between(A, line_circle_tangent_point(Line(A, B), c), B)
between(B, line_circle_tangent_point(Line(B, C), c), C)
between(C, D, line_circle_tangent_point(Line(C, D), c))
between(A, D, line_circle_tangent_point(Line(A, D), c))

Embedding:
c := {"center": {"x": "-1.3107758016663908495758050776203162968158721923828125", "y": "-7.80192747968334732178163903881795704364776611328125"}, "radius_squared": "4.0753220455875354133468135842122137546539306640625"}
D := {"x": "-4.07038490213374881676600125501863658428192138671875", "y": "-3.23846497367651497967244722531177103519439697265625"}
C := {"x": "-6.9934513958167682082212469604541256401539034668338367903641799845106260582784476820583412559068973990756986207512222219077917532628590209025010841048306795904134361806599322339925057764229765335550246200179816503757470603782540538374646918247051663622246969145741151651700432016602467850903148587149598722340298149808550626652401821184604422809905396353096873606481661942365587548716776903602404735285603559491564316658398964582261077495669395433503150443321276713271026426822997531352626142018100296809895683993584624129477038208335526141839927776557942934491832166101742593785652886993109840407956046097148486546144324321541815249521086039449256649273600010915141042872744787818205910145469610492032479890114041914479692586045773124063558222870002609733735963836076974827579139395601011336183215622892557555020415997032079225591401896271933514708170479553085025640147515182826028226202006618227481593607214711410940875509815498346074157421356643119575625915148676961988882871955899935868942197000050931537818838677710945114612115604169557095889421789275057194546897484185760893497864493768285839089514580536537505531435456513971007994180342738071719714751949728171459121156215430727224965917460705763923829038019675840618224051039323246768893510526104398814185060039544286687621103237374921902067295681895460051955348905659920008875726494922221408936215725488231441588270256305020540448640313049539625157532542934595219107868719588264469661295211440715095174319280276308674145625768689421813471665519921870372908731699075682811493189437292900327476135946097217840987804329833973343865104580009954143353274455332143912363691967016982908017305763358876268179369152830844455123354662818137661941984138401247167059605263892220387129416537369882984887652415943811308711570768715648648099916406942775760026683282943784601796160211406284370189197781338733340573097538226991068287087097127231683988573212081141477210155365730763533202253932356164770234285504363729358002648546256802005129235162757225616267", "y": "-1.0680294245216838903713897347002048840058914443447343796566290705142316578281593356978420854239668133396687208054495878776649677637207912802780113205833872980695305052449031546158745630564554630200414329973163183568462335304272087289244987743091979536716351426982068201127212471639149900896655033083320884674650933873549441891086107932723925901931475163755565943977163229465039384504558788664011667479418525814431597477110122981364657460645998894934596918975445958331488721171872017977998014068106242701363878302603710094900165749098479059531934657975947465916525117071812024908229619038575708604556938241724698794972277581887074784058737419812522124697587071205202973699641334629426874854438392701926315033077697135602035108038394841306420145189231157679770575695701308568174692798239537998761874233126382083684971676765827729537496461868551503590778737162577476523372696807605000034269179016660193871546242848536620036918897497189858260763337879285394909688658840981743970117539539518133866449780152487045127309066134416225219805131856532842455953719745609187681510173025488659068739527015321727640581482813855876469664755104267980855751097787450835404522052464272881112095980765924184166640437339904866687309093272051876545425484479025051318250319521112632236681181445672127032679462719392233791477560709940006391931838183440534401108021091551453290720897131068148778457488275296081338018725220499125408190408734989684736190826207253268228981572733812438342648118814027220007575187978415861646096877167113774071277202956975300567741400378127703136726365497721379986744731738946736843746506819451148423410786884363090864509851437311030595772698919830254704962057047339069359100740628508992859030652189132091515959416234593427556709410867508019440676711291188482689938416551166664710046188876264309389834899441063725365207233886811682643275295513691096105181022561524836921502317602274271489892314779768049993946641554371456421542255117748051504416058353509820689079683215663774558337510437114712464"}
B := {"x": "27.800262054178998023146460133584277115203448692799507522444115572697828809735027626975063777049707532793648463008670382686483893282424190111353028365989203493408012215380492863059693962895011812521150092563732306158557810677441622120927339957329082016646071695888250837150529382294850230578661679938443819930240699507624748585757467177781003573135710798124053501558751645598615954917281759951430980269957124146029577335031556776036170515555157129014457062306709461423708124833599422961168443616985130280302300768067429486788041180441525451115365216528031858298746361053900389576362390665778756624531685237202130889636584256470784575976709750712550301552793608070917250825313184335435905969541142563210361403305935000905224296999445599406293059586261797851050978273684719254943650963056505726995410815414982524801525959907481667007248389524191173642980822388164816378719545495061934434365636510905535800789116228583378137281982567964042454206815902944823693486141046402996245006706554832663150440188476180093134262263835836885575697003028722785249500512534872771455707504567294876037295522311722742546537779072068214185992241564861014023606249887934850338190324566472914946111491925774083880440109705971530178919729388197729157804541715469116418232618987887138965541910962715474346457422224356629747031869099508148934129592577993272210880715229989011048109698537666442403339743373818483949612154030298186419200027336888903944769746106053141805309175872045813834462382213689411844475171518389800284760612201635039858963633328874406657049067544791830698469792875069221420366520266914468856007607112608792152442083374007420641952618981447855314175860474029718217346173469602518306920553751237607318194281452466983824342985442903087578986647461394637246468596359768258256656802048042717941334705108572822475583378488924794629376964600751277047316696858449291148273732617419295777204490551011538269219026133953297122208806843421705693457622168319954602015602616451358887387795245456231289730784133111817082", "y": "-69.60256432941925873701097351234092549940880587744820763948786321041104277770577858073160258946274734806384477569093825282237590394961052271195262796262535000290653483736892338941101969426802713367509131458606555182040062575495489948456281676333693922646981930197250080823100697373789538777580708466355535314804501973097877370508153700368765294597570217870101921608373111777924572226261061391585590082791930401684354039029253651722225552245682565210335084329545089155087067787104655755715586814569864473031380947207593524309557222012188506325863524892263375231596156772637698781773580536129274646342428271137709873279407130247897682434018059589055800166806874287173599257790249188817160795819260692215255137980845572732367608247511087939593305641136656462439251220622731332260063311817590897583895914354439100825546243093530460436260820520523784185610536548012612555120562805571001736095163364544235985101696834268056814434010391858872811075757459158347878756368555940330583726553958549021077916196535683024215542168585597693118138344630964943854437609910291220157433685362126609552657762923193079204495722740846860158585569351887542136458013293491297006234964629175931195935482171608284495235602057775601098883110340277673838934556818504614110825254672619489782046277892016544972216432892650561731495336802325999285212356125808011404486797348850452651240258244244576186623538806203131132005124776073150178727276060313592310185216940055220197212863724678334128970075687515393404133131040292918632253070380858366721840308559343712074721579958472549540735148829847359030331522793726128427464612404004114538310728007339585894006415920950214344882513588684869969024838807008230759570745327352376456527531929413706916650246598677497640378967873623907928997881478967274890301376220098194909677886420643328786079687115429184454967887412074841479426444215137560502138933170589238869516738302447068118534661747873066314209814298817226614677127269596675707514945051596119573180444062576701877654496018834045158"}
A := {"x": "-5.746520416871452058908750123776772751190741788393578435641136234233238904054392020116332138277545827837991629015532564970163959541969498644905968780136410202829053376981086751181941953825898697051793458990173738990370428786323110517206682027578811818003562108616560670196777257066027415503136883891403069452354974374118820496445132459964879523135184761946678376841980442174697945414515428450944796067172551791355256032050767859645795134038650772051028798634849965050438632312636845114057365404875330753120288928437330466815216279686185090804615816546187178968401099907490125609420498461174862107144423289114291284532080794737178695356257438229181710081190113096766248399611485514664445889095810959450446932397027764025329277249841150473528119783749257085184466219107257487596413503551757970687226720558479481744616233999461729467221399913179283664741137977706273739622924201017491193074086165941665664275458066752686056145437094902933730955945668347282743784723993102119720771836999863797420135902806724693180628970139540574297109884897139642756829234643552801694361258455465886653123252890498638810060856690686976803284458316664305593890740701124603196832090416840663454974467181074339435408055522987045319605881421676184551352511618788923364452328608087802522202938788122435335616844002189246008243122465417970156222161982711608349827759451947554837693449193175482858086263524431568526499479656816097532603104859260703521471380982866650625159554773409157967663923087882178753445588453049905584792603530013022234323674978174817584150887519523342674489504377189494716569166613923338374561453523099502583563563639170467773939871009683444734781121046335064754866023011779625110326871821855253328525125494101771205838901601406114925970267503400290070860694187423628351252223286621114086587616835437655177025353588419539242506660688474842722885392721199460418389373614392025404429868411251048621174025055671181063437976494123692050366809356038494871894559403137016387185667636714229692224596874149128133", "y": "7.4421016197799905162810781932405138933053865833283832883257768452516465714277039843962534851313333879357218659070989829014325873872428103789210816632775993359067066397521733205303453899603470637813447479670597806335967450320229227205437270759662717174727618564815542117699087588106828632987891047645192714989026312638225853707192274136957520067679311053435757902170226285251796633051494440681186455306446578687452589853576272960810163284887015968357400767822881028347688760009727849606066082507038312855098567333478338040457526369375267414793253871347995477919151669540876670716644787091400879780644029247848662810305452363762915118016461302651665982557113456853533056126863431050928796375003894993794974599136226414590019014738839608180323738540117624794759632766034884598745152489034605116829505959270447010429306281182355817855844140717163629823600117945425921715323914270900995682551138348996220010719313780213479820200767737617546217220878319147691579982851760928923934884298071128711730920626070375330089005508181441190982274017786049825788182740044110544239883300322252861245378694020641702248723682709977056949473663270074572197617080297238522804113727636982974592357999441454561489949326176806884067112389483193599315925935456719482956366372667157577920255367563526438976703293478491007618985519963702342222970359411698668709001590243851039652967532130107350090599547623468650243988255798734445428150860282309847740542254746229385473360628998921324481727888680402827117344882962086045486590774987215624211803250706566822651442838633937945691679572129360378230978051107436742625125248249893662719973914524435273731312653977960567770289085170709022724488419134171031499389313334166155510211089562240514655244519901644216171503553727313965359236462184447711054385902999411612499696372359461296207491801868824582218325173708386086843376591180445484707893525728104290001395251262452244734515208530337923676857863973524511179655611542184432590606787577100498567849096656899305195172734803953721524"}

Need to prove:
distance(A, B) + distance(C, D) == distance(B, C) + distance(A, D)

Proof:
By tangent_lengths_equal on A, Line(A, D), Line(A, B), c we get distance(A, line_circle_tangent_point(Line(A, B), c)) == distance(A, line_circle_tangent_point(Line(A, D), c))
By tangent_lengths_equal on D, Line(A, D), Line(C, D), c we get distance(D, line_circle_tangent_point(Line(A, D), c)) == distance(D, line_circle_tangent_point(Line(C, D), c))
By tangent_lengths_equal on B, Line(B, C), Line(A, B), c we get distance(B, line_circle_tangent_point(Line(A, B), c)) == distance(B, line_circle_tangent_point(Line(B, C), c))
By tangent_lengths_equal on C, Line(B, C), Line(C, D), c we get distance(C, line_circle_tangent_point(Line(B, C), c)) == distance(C, line_circle_tangent_point(Line(C, D), c))
By between_imply_segment_sum on line_circle_tangent_point(Line(A, D), c), D, A we get distance(A, line_circle_tangent_point(Line(A, D), c)) == distance(D, line_circle_tangent_point(Line(A, D), c)) + distance(A, D)
By between_imply_segment_sum on line_circle_tangent_point(Line(C, D), c), D, C we get distance(C, line_circle_tangent_point(Line(C, D), c)) == distance(D, line_circle_tangent_point(Line(C, D), c)) + distance(C, D)
By between_imply_segment_sum on A, line_circle_tangent_point(Line(A, B), c), B we get distance(A, B) == distance(A, line_circle_tangent_point(Line(A, B), c)) + distance(B, line_circle_tangent_point(Line(A, B), c))
By between_imply_segment_sum on C, line_circle_tangent_point(Line(B, C), c), B we get distance(B, C) == distance(C, line_circle_tangent_point(Line(B, C), c)) + distance(B, line_circle_tangent_point(Line(B, C), c))
