Assumptions:
A, B, C, D, O: Point
distinct(A, B, C, D, O)
not_collinear(A, C, O)
D == projection(A, Line(B, C))
O == center(Circle(A, B, C))

Embedding:
A := {"x": "-0.07646594390746132285929803629187517799437046051025390625", "y": "-0.06237655964027731536614140850360854528844356536865234375"}
B := {"x": "-0.5582170945160187525146966436295770108699798583984375", "y": "-0.9361802946446424744664227546309120953083038330078125"}
C := {"x": "-1.0005423582942547522378617941285483539104461669921875", "y": "0.88957510931005845389307751247542910277843475341796875"}
D := {"x": "-0.7314681792862276983120352234659534217287189451603203392413935799985030527518254307275561300204239537595452045231121207374140178795230263324152734137202038113444439619346400165771772288799110865890697277917058673591729520940562646765713178455998638110940738138485040342696784217959383849909106122903510657578159633660760227843033735029406851598062519389194087600028642976481548346051244287601796264791819925381387170741446122652907417356226857779186204789400094570102458165537277917881336461131439461644167645474205994648793676626304572602434426434427230144534626177571580581800697443440336492501300762318789579095408311299727033373853504511497075146494023471195132307045158013320702939786784404671426067440835773937132158316812373035915121212821053937016288015680099306192373829732127366323743921043192230514315238612180071873157442666489163607125486163923190276056174744338285863748052157964792130924019626668690455932481502364513593716348615085336265443267751552665644870884135246963577068274284714750457002388952107657617013206500770825634290292231664930416905349690532670041979212563406616989765681142986753605522285023853252058076688173079181789973671642875784666769721605280004862498231682770976727659217502996340866010744605526355135866923392391237580165086571269486360091023831516273145484830533709124952735753200683717664958376430694618376655425146848257742497223110108558715753132432064183539505552258672898303418623744939859478452638091429605566121925722007564183501272355101448459842737533515679540171593083333361678769947161803092405546589838469773243812684908066421090662426476229934174664936062936245299005368579296895703890038358368817704863333831437835217061906140316629596815306242169502849864452251432210055791441117795165749286405802416435912695143520948754204848483101617886284707308896594107885009425155328738033723478974186313033689350046615530213308292622577365598117777990558158813330977872368332762192623287122249195337099266160900708371102811981013011783254982408760151321", "y": "-0.2210637725668755841314924732171909006536774578424138863566400559662958914694203522329217706109998486089026471532500364416597830061362287614246160301247430062403221666118477868834868520394816415596279909112585737977195738497806277142372373842853040949706865756385375286417186736572114446882277063620084563126173975771179446809580525810933353302896833969467525433616417810474275030365503394336766527919182578854073742756949274096974197908551382775102906687185541789701494018365953397453791978999429160564543108860815859025623333753744266691175298603234659079299846601847572891851311803736817793079349705879543459165092315681427660699366913280510728632324599061763780011102384432928651916853222616545863962938663560606828294012160422589365767787867908444656966845976050053910833521861480189560103686264551391919450052239079491037004345258179319935657019742298779935343193981081099522931131073724001718172166606299547671417798867528203254432474974222904776497722191334758206557772951373431298013446826690553412077323071568317973468907090651964831546867438757608543895094276398540149074247218866083664496636024653958866015208414749410779654403291466833889246440407860156965879879479830047151517871003935625734668449379196736721080671020659350177605137723392623915168047664036136129906598139241529086969565926813050508071141644202548811200064275051680327143970987744232076846155133462945236128004660161469291339713337107737929652910132204793857420920187259110870266213930714608063901293716469020425641390548261266528383780684192026443181080012520502271521613690110312132447596482554622593986985134687143394399288297075971965589053440859203394402720835490079311559278675853461891103119268793111380166919079045927195322079358034876662225077794692996129614891176564047147356450344038408187465609134396940626806204158394536313792119700525622226080380591299056661104510952307389616728506312605270374137877119298931349898945652939473522611020205305168730253636326801500729308290498176743100214817418409822907593"}
O := {"x": "-1.0581637262259953430795652277756160452967696705367616941363615270221529794772961271693208626088042901406621281014143959202497607174819135852165912730562527822313221914858245031074656945867345522712927771439415646353646731817786519655219008832475994297660747718682698930465911240383439353204979732381062763339713595776896920840426135244875540748507425582621316945254694198584691750391484185474525879323595179265042381273727016101695520021279849744591301861564256945032182878139924483468145391086465918744938605934148331618115339932930390479227657183677235324626641690628211867312909034707743594539391011982338873315182538177454819881216175484992832812058736101589042002461561761746718632089628046914868851045665885305609761611306849833626412485368622628873628569644608494618178801564030697350266513009136455312106438404435993829865241971815633075513542735326620626093322457249556422081868202308993908273829855812687704510922492473810594298064278531612503356390606878318844665035469907746975338360275561524450662584763861082675382881664384473712183841554338786508856117639475132152871010439106394057219763917245231787948296864347889649708196553172109560272055194152551427025696220365072695488659747838026366347633215542340656892662691352742344232553149643468786455346145470777340130955399208458874114864406805813271298084260900750999393772560860481788384724272901806206858830350211192708218668839787345701755098231009599524844421609243255231569409061163116624944647391121991133541686090981707397641938628370525612917395219608101399877806527356428042517812298815068857585541281456156319010538696138284595203788683477095569462097173699115894261063288297484482310839918849240796028683683641553201515119776633245465048693126279450610322335006213855310597060139803528035822198425500479550427859151641773065407805474015500675480530114624485690491251040848650647632933773919265258557356937106660535937540793740610716081921618471771330283734773388700548845402859116276742216412487045702227054085709968742656006", "y": "-0.09084351627119252212272989345733117761979268845018983940530287572951901357951013778743908043424775012353530115303258420334013162059070786608362644104998417256963136688149381478279066771239965906764201432002476135456246627866857384517189029460678994222061302149812626729943628584820063791105371989982486100156762384542233744783539910578786266642017173763341001447558508073311631587981000031908984486054679929462096959930544653909996592026770166248240479525458281206037946712170433138819331803669224390703538659093519947001406175074741399178066619632414361837553681740055896158291091355982858459242404802849291703456161285228557883119660625504002050297393167223701056715401005247134136218619526467833228884825919939117680862098652919884798153084655375090613294517838827016168967676209506524135980511696271309194319968975053324102810377615892805500923113246293044725827113818277945390987321850827053923038022628624092768662737000348719501129203854761012912156831417213161712652597465557290609649817569241467872341201553696749160276968538482350879553189395061185818975051013194807587410490618071375284260979182256170543856248403477929512338205740325000507760583200971003202809624470464913583441093137891899271142237342907535671310571883791994685734457954012071093711067133558363002496144835386348666513215680193157367874644916838051319384676198697141350738882150686234002477483887662029515530100501884088761507416523932853124243329434291474852770770776926064808962275310874816573321503370711301340846118411682718536621439192645448960072714086002919254965191589067274292010097089798521550694694372920164973811635482036123398232249235868876270800599697760773712407328140800802745187300214030762716360389805803999864530992117385108587838132039478724474002385360215403551847517568324155012242001126277619583127978614402573973550591687914165056979016601829390674200022353247971431908298926954937816815144494735054137929604736575935616657892041434986462633107237308131542022244490702838713654845712292845725398"}

Need to prove:
angle(C, A, O) == angle(D, A, B) mod 360

Proof:
By line_definition on A, D, perpendicular_line(A, Line(B, C)) we get Line(A, D) == perpendicular_line(A, Line(B, C))
By circle_radius_v0_r on C, Circle(A, B, C) we get radius(Circle(A, B, C)) == distance(C, center(Circle(A, B, C)))
By circle_radius_v0_r on A, Circle(A, B, C) we get radius(Circle(A, B, C)) == distance(A, center(Circle(A, B, C)))
By angle_to_center on C, A, B, Circle(A, B, C) we get 2 * angle(C, A, B) == angle(C, center(Circle(A, B, C)), B) mod 360
By reverse_direction on A, O we get 180 == direction(A, O) - direction(O, A) mod 360
By reverse_direction on A, C we get 180 == direction(A, C) - direction(C, A) mod 360
By reverse_direction on A, D we get 180 == direction(A, D) - direction(D, A) mod 360
By angle_to_center on B, C, A, Circle(A, B, C) we get 2 * angle(B, C, A) == angle(B, center(Circle(A, B, C)), A) mod 360
By perpendicular_direction_conditions_v0_r on C, B, D, A we get 180 == 2 * direction(C, B) - 2 * direction(D, A) mod 360
By reverse_direction on O, C we get 180 == direction(O, C) - direction(C, O) mod 360
By sas_anti_congruence on C, O, A, A, O, C we get anti_congruent_triangles(A, C, O, C, A, O)
By divide_by_2_mod_180_v0 on D, A, B, C, A, O we get angle(C, A, O) == angle(D, A, B) mod 360
