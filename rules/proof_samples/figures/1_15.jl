Assumptions:
A, B, C, D: Point
c: Circle
distinct(A, B, C, D)
distinct(Line(A, B), Line(A, D), Line(B, C), Line(C, D))
tangent(Line(A, B), c)
tangent(Line(B, C), c)
tangent(Line(C, D), c)
tangent(Line(A, D), c)
between(A, line_circle_tangent_point(Line(A, B), c), B)
between(B, line_circle_tangent_point(Line(B, C), c), C)
between(C, line_circle_tangent_point(Line(C, D), c), D)
between(A, line_circle_tangent_point(Line(A, D), c), D)

Embedding:
c := {"center": {"x": "-2.954445255090240696205228232429362833499908447265625", "y": "-8.5586126091600505105816409923136234283447265625"}, "radius_squared": "30.20736660326883793459273874759674072265625"}
D := {"x": "-0.82941025969441783960434122491278685629367828369140625", "y": "8.0515163870876449436764232814311981201171875"}
C := {"x": "4.5263641227501986879206162825321238218325955790362078444084831907399439706602538656514133131554149503753415128291267254035267633656365883873561474820348724378765982987598117667904178729556165116763354138640891164669279501542766132403116067834704319597210954507888576733562934081029645791960276998495631617695258172973877466046780487971938069037044205846106400522809486526941058268403275158073757283337004254447414697548811380231833101767063400995090360272512085807303449793199237438939989993284428028305395471662370140714691572242430786795689373002099631253914893506070187650391787011303367356221906168547401011016712977602651012109309007857581435850682259555360362840654417325323935997962470821335018449332130528069686229305557497509675935408925469601562549769767168177873872789048884012123154867909248330347318673210294792509364387074933663542266952429383693563715667189928241477258051453207267305308189398293450891307477710738874968988428822302969834803679401650925649754242009259072956616546515754835114468248103874617563642707469071312634348399410267831465658474182734859799916904873560312298486412191066048676192033281556510137528873499051352481668727884327044845098155448114691672190301996682983746385284513531696383101414844037813214047532342002520376205751470413887539952077584081868967725559781474624216786446586597414494724984100806264091476163348621889148706764483989653712886699679852714103007355287475615213164608926197888531052402380348663914934288200040846207383198672072303476466542390909727124560745220054444170513187284433848425208204214973314613330452910947014809933393769704296311327727830351150341664183104613919182984290400826567700876848334697022729434825160673542679789331221483803579388246516759449108049445590468352133152406051530605804016036710507323140377729226142139448451345726145120007323095943457621913716474105650377671595816450409513738136782957951986604399777888401683511746130841227606350785251790672713595768228928767329189753316190647599337945247196486940223296", "y": "-17.429887585609177195493718219954560798480538813171386295395932106937806665635092435190305566671857094399701580800623095309068688683867485992334300241663233020792858206064947481722923185354875667167920406154917652475639913212852375423334106288571670936438068734278975883978996600088576580231101090995172220809155223260922540487598939364405833356168234631977908455997083645660019878044822228418717806624486015210811786046620583052898656952603222898426822743675130831985598338055374747275760819627857264959719892716622506715052869083663687051195485422330648859857719822628702697013457585040927624659533223749543560101321922137613932890131671166911258639583794909216194666719200948801418909862251834691662998147995572702563745790957869388971245029393904924711329490004979797661271120211519404832229675698469632659165375311660195802760647376195756778882204598035373671934390181008481262408303147475411662522655233000172366305262070009622637044236270323179639923059606615551642974910730205125106166975453066363224608145852543513457847426960523555119120189493610661162856770315383046624698514085684169222796752056450463902541101177719024422214200584371124362583822007004942875292556020355504111396678203219041232261139170764191660182882301145124993102228490142893883165923397335176203386767643548818872237141617743611840010829990217070557786139413119430968501933462317891768147765141891167004841075965010484592336943395246412559967561947997292166880327043103476158007070139191531281468133084240386135910119930309999979161386001711852421383594935029451658819270863370243624946200823143277469123822255946354939393302152360440455645400575330428973103641142375144096657247244993579506579070592197615294499518293018057865561243533231058078319187828241118355847985709578013283156824313960699405399652945405387817502066513082360817382966304336215473109420667817671119132599768806124649965728613992569948377299312349031731506450506932557872693615350035943854321612920402644001745413327757060567264525653158104190161"}
B := {"x": "-5.8678577546998053490309107254605437563108469725798577787605853595339525348089124455244391563866095778233656395144049887480586104684351568131958172147959396316229270450113999623309268007316167683247882726205323242819747219803757030590984553273839842727580234135500675491232584103782536739738421744498980739246986244729543227322403643361264534103412429788905375690011743384735263981715357588676148284878859556180637722624121630725678154003304846578414431668120982929424482112326786257758924541822315693893958641419910545106706549724643611463300855054045645277968398061172376670904002053084199591719738875332225890003788479120953225442804854270801153483113605865923298927169334824220179427760061010269069254146549174642969638512471888268872648316446004381088788034663581490958363857986028553398597638172881651084844273675402540242903168936074003412891151998366950999906192032935680412538855928378511314064314969069444819954111979945617791290285157314442638536475946117462402594283564028291174850208271233687414610891648815141236905071863928056314915595306919568958737114167421466858953296542599270119129288332513999161512921999013108637390206710860682002796545506387680171753953268633119703973242148076240053580025904440554648389447871835600410612696283494196646266274881413878625138222935121247324916194626817174121978538516271836100696048895572035459800235111375073426671587913526964883721247373960951101602707579963792100999230948185063597226862433884213014299808662575417336077837006172526863476983426357752208127320686585069840685321301456326746306299258027686395127310663081933687838332489450750791063571858068130174048594720308914628967533434797092914781768020642042894439354728098461863553924135634304445515189641477528617133869740959157056871160482982600535203575427793445725596081107128632509939351356328640183111772883597465289186210800853677058454945513759164896607045200494728894467880399121820791498608154934307993592774235430217635942393583833886231160648087988083705743426970702413285667", "y": "-13.31651151827140586615924870757739662546545232263927392479339222115290396740693418762137567392942874254543249726783946535960830370955614301430704357015630383174565276051186078617393215786315929072677638313531597361249139015666993254892586521137316493855559388265972465827665846414161113950115385783933625888712453937132427731536901627585955374795141379857851660117339061464909945474167153291970875078992001847057337601986873113493260480106471456851774166977551778274774565409911314370814372180672721266970190371133311837245425556330942609242104853213945596565428956969733813128575424536302945597066612169417274393006188747255014195062714145312357629771418080680530435756330458178790904459946663104118496862426526037790912646610878806667607369576147861558076293894742869143661990350717806989831244235385387870876287258915704379188664595836681243069027981860312715678980171606085273652175429198498493652507579056386882566688768904359987475681969993305466237428811134757141740276579400431740651894592005823989630711447503594068251115508808231895223472139923336825263191477766988138087986342156722648867226082476146855760898073797696402750097378403283336813925405605399351375556093470504671075154750523399824977053497870084992853678123392697154320250145401375944108836109163585128355635397475529859251377370915506854640758723591476939286197852945793725193075762198934326372668755226054437186191894733888012157772223629670564820789647834376677064426855203019576448884163111770919591950368057909608105571392983265473430332111361695634280323112273147109802072010581853466491802706946393678822838174836046405549872310625972100887871833230033368793297003682397763307277174378086221509778186226849177685729685081316629693111976206201991623855217073358205175608668663529552419018746320505928992992191168156585838329489783760117757503830438980975914721636989743712928422928407640192657191601269694181096439715039134127247116543071991183650873380737628207675352294954149748127189275412389844890322059896985088374"}
A := {"x": "-9.7564821966602258550779705049898900407295122071742427099939986173708157556476518271429349623629105884157939462353328458177040555066804045770908950427354279889071357385387846711616528005969693161402676495229391431166534148800638505390354111399082035061549230068663394457032863665116114208405509328669074049872337962716540787637891701344542303308548192352254446144187212683374040573255890711219352549679246327542947717265634075589552647163006668471392148463602883862001970361141885703624025050280339355774807464729384810948685378635836736966395893241130048323998880259057668850697583436893696223086068345856695039749833411041957041156918900946261077475725505115132613386853010065703489657501390935838598623087144440988952795849331155794066074004548222265223233844188641285204202159467653112193120100916484431248527287655228961571563806941569678571569202876386415373515522013917713279550514974503810741650561330191467456498524678937143132521807990748099747955954420742251642411944756475383718905612701624008798954068851907998172334906190633939595672108456790327290328860791214201351426953332383513719630908010746250142104342497842789801433729865770609722099563700848440226806714848072508436494502409970735772523160422745633708373574431580729049102420499029645386270618631361056504443964965974950989645801849631044341410275792120730406891924212824680420143355358178699342556984684865117151253381389948756720085746941759582241672453982385749211289291384580005242498288336115182821064189806357965746924854157083125997083653714646641367955595193898469066036364624567044671393584479078315978154733262513303163364219605618357682474244120985069455523959006788319028572541355294172491258665548435186377024956816005033808287631759833240903813118959688157107545066638264715945814752574340932683466171534002360993015611268058388142334989606937076925255194821975723548612727668023401855459968329000258458051191272819335463448986453067465179662290658579318498882848011170246202847180490809928197815887793670633072873", "y": "-9.8917981208457955994903454317415246786308393018130063211167884371593868693074538341019759691050329097399337658083859368198701556887184190596409487310327081991802119295434927567270351804515885884494630854789162072265739783690420488604827313069564830350453303817055958126192137732156976449265449420091941467592564592925194548658366892708645209254999646470843887718330823234851077759405899008862170605454570408961079457922690633762723158190193065107207634662867468951285828032803433205344265227931358185300657257302947548160508336603236389693692133734885794167575141507217324998747080254458240879826240910154455940021761620873780038105166747343952501386869916540528314963794285332138161093450347297759090457245326045502295491056166231786459001331579944790826222133833139046824079075741214782176859915225434323526927792967477988269651456879951679575447111876514188814612370132366224210331201246284996641473264601719914799345936303624787161342497894120253110851006449168573135645590150542492037823850266180344007751164331739063823732195717260701233973610861401321275774545859088135603413358635436136731660914798955584055316722413396696146941860642084367589241450552729960560755897312711941104457372193315890072438687991187434910901826861413576143684284842173501136205647916537906716039383113392152773396887197092229240478987788150543833694576812048262616966030037792241526638717628477125439497312113483739696702355480574855815458400339411417646695348300900043470444192754760626557428389913374734377945946629308656445184680215108050841833714670148962127725524352443825245634610524479334314270889777348197429165288455911323258929327501105669450713250648447069701749863834044577903377385847761755765137267904443616520451239806450702547403668358281663424389977993364832680756332429672836870202830168621796890016570594626284492513842367845726023995149782822049654223594483848933756733654470706220130040880319005515925103799883592960911563362316707415667915068810540127381104115698199745243461290653687533422308"}

Need to prove:
distance(A, B) + distance(C, D) == distance(B, C) + distance(A, D)

Proof:
By tangent_lengths_equal on C, Line(B, C), Line(C, D), c we get distance(C, line_circle_tangent_point(Line(B, C), c)) == distance(C, line_circle_tangent_point(Line(C, D), c))
By tangent_lengths_equal on A, Line(A, B), Line(A, D), c we get distance(A, line_circle_tangent_point(Line(A, B), c)) == distance(A, line_circle_tangent_point(Line(A, D), c))
By tangent_lengths_equal on B, Line(B, C), Line(A, B), c we get distance(B, line_circle_tangent_point(Line(A, B), c)) == distance(B, line_circle_tangent_point(Line(B, C), c))
By tangent_lengths_equal on D, Line(C, D), Line(A, D), c we get distance(D, line_circle_tangent_point(Line(A, D), c)) == distance(D, line_circle_tangent_point(Line(C, D), c))
By between_imply_segment_sum on D, line_circle_tangent_point(Line(C, D), c), C we get distance(C, D) == distance(D, line_circle_tangent_point(Line(C, D), c)) + distance(C, line_circle_tangent_point(Line(C, D), c))
By between_imply_segment_sum on A, line_circle_tangent_point(Line(A, D), c), D we get distance(A, D) == distance(A, line_circle_tangent_point(Line(A, D), c)) + distance(D, line_circle_tangent_point(Line(A, D), c))
By between_imply_segment_sum on B, line_circle_tangent_point(Line(A, B), c), A we get distance(A, B) == distance(B, line_circle_tangent_point(Line(A, B), c)) + distance(A, line_circle_tangent_point(Line(A, B), c))
By between_imply_segment_sum on C, line_circle_tangent_point(Line(B, C), c), B we get distance(B, C) == distance(C, line_circle_tangent_point(Line(B, C), c)) + distance(B, line_circle_tangent_point(Line(B, C), c))
