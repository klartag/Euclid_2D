Assumptions:
A, B, C, D: Point
triangle(A, B, C)
between(B, D, C)
Line(A, D) == internal_angle_bisector(B, A, C)

Embedding:
C := {"x": "0.04074073747454330651773801719173206947743892669677734375", "y": "-0.99916975149872822026253516014548949897289276123046875"}
B := {"x": "0.08490854869373047619784955486466060392558574676513671875", "y": "-0.99638874861106518920905728009529411792755126953125"}
A := {"x": "0.11444669554885279760814142946401261724531650543212890625", "y": "-0.99342939048427003623231712481356225907802581787109375"}
D := {"x": "0.072254354013764837344127427359575804304927501208766116533805871247663913613992490229085751818524909426648484211054578326519856698872740135603576303380306641057881903924066031979110293364636234225554459842742679733387882957993870613518532754637457355130551271183033027174353477138048403990650459468178568004066042463919961016626746753051908717725737838709714971873488401614642679366834708397807026120938760993664109626471683147287115185193467302950360301825017968373878107528195096630140683825187246612503970266200275693423731986918550391536951491006296877498990310933635983077147774778067972783755379399059934923051307280677007207796603968466086389175009241541527277802657339820550789042806641519278701078206841569905574026603544107447070512808730621104002011710841620040753292731148817787447004965080096091491137954325427897069274892332888630966826968989697455375217166269144286547209411751732360732366079731672264749476739184266082571463379562206598972985546405359118699670663304586820691181092937785719826825758221191398541509403619808118397147635224783625576701211523035318683292082010182001929265963311281320922719512322910728390678268654065303460221268744123735627060979942914531251334749728466431301940310376333436735596920318525975637188816697886166830654687931272584016420956670386192872770892669657773822987348900280979696733632154237245520478410540238035564294342725429965204104905161539011573306906964797728015580471246953990439571418663740612662356884832563210600655160106866455487790604076913417018660408731632425691003462041991400172715232777174428827772833721492872023757097695033508882221517575771265108373407528643538853484862099488525362541560970497992168658914098765645724046702267161060806235794990063134945671469497453456696574590134541546416780318255506777636666702173197865012172855948234962008689870337074900095078789302836002687917857236440363919497195616407518688852919103604696511193116837251765613644647587918129691776674834646958831861116042591396637663791934361149724033", "y": "-0.99718551329046924687818006164153228987253737807868294325436106009477461474729993800362156603416071136114778674157526970514680935361798122437167202587751281635639559296201954925473936662309879426255197954542483865386964703362845366388097033243145860120074774022041791517184908761170257205557431425216468780560427719195017379712178131838021074575025162024816801455343519965705756171307161633942870069520981325183754330757890549528638579803442234381811426792952434077781764076234217720935239923385239468320259369096919863649012956699684774091229097320793172618973851895967483823566397475320672049302256031897668753304484136961110329364801985023732432106887970545688970662947590185366347010453306662874828887087512969166788211768394044585879625825275918660671253041182696836574760000454415311147751881492234603436692298360602549492462069050455845433881211789159547413780040753928151783327314730312371298594871536114577216341959041338460213016937773859506706333771960825276753642832309342969373455750982606012835869162728836302963159712978594106162253897345567941523400322019507998823184720241630623045308483720363991759835455135641143159683621212407034936361450022874019712339516181296640349625774806317626703214985998622436278079026770718597311356796592654241169812059662343385657668528364989364817673431681014741332922997985621828882059076432361707539145767213053888032562577026913868252396272251486706341181659228573571081483518469731271358286368624796289457607015673785410070609928400140199277245796519777494189889055798077044430748031603790841513263897275518671920762748286723985451367544977469084558584161842688581588620834324813683762099551361267646673933131673015922619133335598810702741233884015355058922210845103205977674949483848113656242533564445972460943402545093813232636753495150977266389791376437591227394652447806774787964491007408178588181746827886817310214655398356041597272742115394757802124265864611156027300557347226208586169217417870248876834061179695991222075538208388284373887949"}

Need to prove:
distance(A, B) * distance(C, D) == distance(A, C) * distance(B, D)

Proof:
