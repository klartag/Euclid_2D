Assumptions:
A, B, C, D, E, F, G, H: Point
f, g, h, i, j: Line
c, d: Circle
distinct(A, B, C, D, E, F, G, H)
distinct(f, g, h, i, j)
distinct(c, d)
f == Line(A, B)
g == Line(B, C)
h == parallel_line(C, f)
i == parallel_line(A, g)
D == line_intersection(h, i)
E == midpoint(A, C)
c == Circle(A, C, D)
F == projection(A, g)
j == Line(A, F)
G in j, c
d == Circle(C, E, F)
H in c, d

Embedding:
C := {"x": "0.337969981607924463418157756677828729152679443359375", "y": "0.7345873095129189511709455473464913666248321533203125"}
B := {"x": "-0.26069566691216206066883387393318116664886474609375", "y": "1.5669127973145207111116405940265394747257232666015625"}
g := {"point": {"x": "-0.26069566691216206066883387393318116664886474609375", "y": "1.5669127973145207111116405940265394747257232666015625"}, "direction": {"x": "0.598665648520086524086991630611009895801544189453125", "y": "-0.8323254878016017599406950466800481081008911132812500"}}
A := {"x": "1.4132255927253269955912173827528022229671478271484375", "y": "0.60732950398583296358623329069814644753932952880859375"}
F := {"x": "0.76490798040291310619944750276037852366233004111935765641821501944405103642394659988052527137529514411647656545397883696794399323336659886330883372212640447565944403893901607539248244740315661979856112835398849797114199253252523257383483561174377054228677329879031754468520733894416652116605830514768669736739885341117766600772427514488883910296115839993313644352910653498748236662494952051100927426445698945661061150731869557343806110404101459528208678019490561075165478173534486650719620264769490758487005406970100954242761164283187706804639826788403652031505625658338114834643387254758786679268047503908760959991200478416361221607017763290021029546742695227686860948383275396575480694190742031129954493196984593132238466850447053038974333579256462084925251292959675651494724142271354872135600718068888568261341802932908223300264989745450293153687454390369003056748540007933337873001820070625626391365325707833111883047468316283639166586510775740900832142494265629948606522077335918147525310408066897706508641843284840608333144473125760493848315340332138459642188330455812533149472237089646277361497836246792723743202579162257474838143421593786687510705217117133803835360898279941362621691311462786143245304890773991870610422720158110772554985614049423100267364915599711348225014718123288260188901326438990841590052949792075339318879498347142944240630947413232998015885606995737466226782956038066717374073245050114718520478149129308490881829316820328825074040722107783839456308415560641844936087975786944763385056939897159030704812535856647754802263874267168529495992700277636593483731165506549070435066365443373283351974636204423187268759840904850974976630499077056735939806862907815299910137044328521202162579873868290591366265392585635537760987744957773394748866656176320324306511026461292324109343072473317050773523608480568124312290449203688787401172969109395725146577733138428038940127292430020805200752184370281944236567255159797482278123799704122613928275786348737077596535712670263258284596", "y": "0.14101495575165953743521755673810509357132040960464503624635006242670725154591532361682022798829484379185011869517400153678661012805964380497599426607719215263395386119826312240830030749027174985000736235204963024969174684021363742916120940900590146001880626019834660105910953296418764144338339510076343267605522211891403365409779684881631368180902263755330811474393052188347494965230989152324222638860296745745424314405647652261555492607706052631412480291868677376068899062417112276808834756067505725350846872580181449483325444494936093171129668894365995149364036148290340045654774424327876314795725395357459684312313138271626761656018170269611731417404792202703641039781155051321926030174284644342004002018881788439492163729261080959165702930088332522905609367144355017945272906311545370653865295999040213956273857834538143908333944801545936744041291190277116732520024022674947025810651445520186334898563181856921448496565040710189170905853563781848628969576283124158762373305717575952701466959001741787804725723486932934871286823907686975757510751203547397389313963048975250195215082466080669764376683435013970621343504560972929330288885173279194630337698897914053492700531954748858123843159312786841318709038759566047301396242529551663568876415901903536620211688239496843581070359419170591169339094411180285142020301956176695987879361268087216073330529888321282280396666883371531300856122085917885385568112046642820746877818251792657620434911017101471414008868456065210831723037048650761731555121483683051233880475341072968489954645217145601913611540934752029686044363377032514099253171153969346294073755862000955903558992289957606720709516961063379765816838477594650203275467073028246378930506018423241023914902019692724973549761747403885021455905825024593873185824795061170115697031525252440809274811229723719211347659413387654827903837498803361762799246759846787032525681555625846445395298818976589340117271057437855429608487734697862290757253326528326784524698429338894088082296997438083199081"}
E := {"x": "0.87559778716662572950468756971531547605991363525390625", "y": "0.670958406749375957378589419022318907082080841064453125"}
d := {"center": {"x": "0.57765591002505771492284811402814329290549214975013941484311369310050450725185665757925260031060110978919312864123177657251073975886508911042236789982579442647229476929597874583584201979802750785586420732891759407161246897042611831260489850316227332941012528306026487156717279055694887867470659010927629105068722675404273269894260710231329321897510633466691251970381476497027778604580278387089380435750969885681529924405055741676556626795464975966747486013514230392733795319711504148743249911533376028101055541055817353759949841204091061541159600577413877349240486018058199248065657679107485123425021195470471992162603070651892535682773207498523044891803251416374736639946826357204143113372475979356365741350647241732518566541867563406801517766777701095902100523680950978844747489477163558735466849376329556266886002335804742603371192907831148834988162197003672585099939347488444008468331480977880455758941373579514840405147682998658982292736654071048085505260051080626516404821465435616028845565981307366975460178032485315363572858636037249615465582685899555258955773573637897247771246709655232317676303291949842925998921065759469385956488414876114627524697434908808377141712655241683995926629795611373222381156478745478679760655232194667356103351931976312735811087459563156671362237919547578462377637514978089778867268708814508250855784009771933934126329138558621123914507439101621866995893434958557468948093964639224068261979656802810540454819884607843324456997210565357342014422832777959085980355730692103265334932563968708574072209643235203970470887396128471936094566749077030633067386917637730058389309462482160293067901386363375906538482955010687456075980544141933639851958228914768353804745510852043537587432956869027566931978389962470366384445906473244798037815484333159761701265564381116338622824648275999527983636334262324825764878697732502508058042064147692153777000016610238562282237949629405807915350447288912216366676032941529680587306826646976702155542172096429665886305061267410685950", "y": "0.45665814835963702323099007682982641910009518162345607872423963300774988363478334354371164946666425055740505141190201462719559151651764635656591151856709132230002432591604184174168462025425809897928382207177814796233714271261854911272947391439360163803097458037144470422586859127063417773410673992652802357827633601906484218263763548142706030868541463875176543508702613591971750756418641245637316332231503269652411122766924069977764812277650363430645254248991670915199459812809268825526024466673827703279263399395818894629479282559315557816775458473816233600336613817759261309337396449698045703620565881362205024659573877571258119827333353246606017471583717428081100498729274524081208927609922443538552612290828814483696090550275032296578294958525735061331968567082954408635831034224504100090074163606638830059722417885626139757181010044766361106225260349531056398838067371426610960109331914493041483291120357107777660911704907449001986950954357945997968482547837268304336259665781058412179357717203506198852765815232179942893263006805196480798562813560455943081156600225024144982708470049467525650440480477027269598156100109135340384069167433640113613383646501965687634461632190904845723178386187549704620641265701616836761329439349212547470872408226039444087720101476226986709264033524754212026431166617412838402930164963219570874637122687917815456305358373927663116248800299754083483182914383909933533160258583441858411463445482903738906933313211823410447244081008613374613379104811036659577231638385442700053147442265402788054501011802133264554687959249562427327532279598275635332043470964064115148282363640766928731375313429972762216775500491461639709713157796494666413638039044769717219496363819957857144849796010925600370414811822727713601358281387234604253064036283218570466786148554195273826634533447933334473060888652089748054245438577558724357215191871892138029936632133100710910253985422643437065703695069248631493531450353751209420717633465837378048716499898352615664835513738962388572489"}, "radius_squared": "0.13469396290055008142824227284830234716531223945989927845017443879764119601103042971369281859779070328184692273228823911471259660429770411710568805559211637106196394733951703567089597134531185848700503825280917459911080244955622610008289735197591691308012018447929547731952211172791411473611456421547781444311537773672559025691153986626171110020442484697564586260205920504404461655942166223911534735826071773040981332610781815611365952923338740511172565403770974713510318376768050280107788260713473700883256631434225617772606914162901230319617815199664262042881280999838125951088891535735144586991348742511267766149689709222060972392236677664799200124836310005209953014603193850972271848452706577302263738690775244272577689748845604787981061811700585034287807944329149619220452023456253826220809346591021811661449844447425943864588346824626631422242294990745476155013530277261038615555933628863642542712260574495029023028267982923495243300510332403567085291688915984728665861244917933380538233238270848966558520177462524546671350212224432417119721766184594157605707085225962728553099454486837876921040092527632666691225783892603500265994415151117628435884123515205613604931147148677999348172438463645178765144677279074951025216869652819665055347161500514135552724774540459525964229500863623897983248479581245865912633210245857767703350022131692509333482169545177580028681829736434557484772302012251977286835702526937092192035493152370618144515097257100433648360135255183711970081339006966955412019913032234471679407175437293106656022830464503544547447166154713581952407903555862684658658069942766027442436945104114898647647226027480302996081662596341476024506071336377127307678387378798273744517096040884059805354475226873890914713327141785942946468467663802462256623185992659957142840040925812725968878051669092014783173184839355738651163791073494368793424154740988502216064078055827025172995080575932586790482707142111752744942007582495293581099347336816323347721487401474028555946234043646377876221"}
i := {"point": {"x": "1.4132255927253269955912173827528022229671478271484375", "y": "0.60732950398583296358623329069814644753932952880859375"}, "direction": {"x": "0.598665648520086524086991630611009895801544189453125", "y": "-0.8323254878016017599406950466800481081008911132812500"}}
f := {"point": {"x": "1.4132255927253269955912173827528022229671478271484375", "y": "0.60732950398583296358623329069814644753932952880859375"}, "direction": {"x": "-1.6739212596374890562600512566859833896160125732421875", "y": "0.95958329332868774752540730332839302718639373779296875"}}
h := {"point": {"x": "0.337969981607924463418157756677828729152679443359375", "y": "0.7345873095129189511709455473464913666248321533203125"}, "direction": {"x": "-1.6739212596374890562600512566859833896160125732421875", "y": "0.95958329332868774752540730332839302718639373779296875"}}
D := {"x": "2.0118912412454135196782090133638121187686920166015625", "y": "-0.22499598381576879635446175598190166056156158447265625"}
c := {"center": {"x": "0.73565354781989460793417642606352185621532820836346161189175683937577720506383567279342692358381523719088771314097298060208904146423136633350025699968171939948091463262057027490439830756332323436228426445867048187792484571653340207485497569150922308856937101337839387704885252111310755097885217386766501528278469854222481869726113121072379670605715588983996216969566253533334298048106186345512601313787439338260406004759696585884738563255177976171572042583131163775139545728883820677474270923454234203906922715950365587189462716417027661695233669851845144468958561177280878553989737992915647474510078845326178375021224347400767705435965341423377546468436643155423849173465338227328413754311144717461977807405708753555388687660001631277519905475032733600353428102879944037234993100192163181833488654391582580240375604394418127425892381243508230002863485641316974979872678952334702899060724840665677067891776255077170928544961771421895735760900232458417367811396556549797648819484548737088357223881949901252826050000940524308608984807718755664069951852577584705759982728037821909766696891047844951520704419552467398277347278565537667618239156360307225021835363450308794831561493202344636353831382192037642254469272905335147179299581234768129005736512274328208016767405245154279205471928793683807894246094660159276022219106959177734111656051706433296930436017642304731983873084398081243056294245704871668234804824544612755373387744509959285345792275120716566947693870867188662185619428431387995095157807893375786161085795294452615977377269178533120217316037268980811801558865810941222402801773005707743147123997444286954469321491003131826448065589997287419889190379116859375781560160922347801072900433141639255830340059074428089892987042702922195596934622744393861854169997716220305679299694852257095410087118220959339197210867230814011540849854249638402579305664791822434185851530416049843145356619393861945328378737010005541103252245357278475804848597622964039822580805771795832103455148065351700095274", "y": "-0.5114903081084457094358385236847526560906599539550550225004962169646608584280194467814274966984066325419491021396660074386626285132780304364097022282811744196391362241985855270197669061583638884727553091942787079311393023563097523899638620466654294479400552722805973429460367588543510608719888192184569011770215539012719090289213817402780399078396435789689344186283952600554132013055739332748360112466767768236605263319913592651166369533531716939151183211136172813770236752313948809536048520378999485028786658731834353029674588542034043152736802682813421719950703937264119983223029364946351377865775879343090318754786396538051243542140227394503258408601461881341611442830327612692783877499297408083095602672393274911746426856613829870729970800494792075354467243785440669768471624366532487993783454685192415512935110098516285067488797092123444845286200150842837672488788430131404114629358632096252295756990587974621238104029505471673551119780023294976755246380669486215273224323953640777903189435504754516668691713978772422390938484138218010264128169946294215344036174670035894688840728030102699203417234327651625782218165108828463403141948801750999410902413717692885105787027137599838781387536203965537850690864761185525266247092945194850899623246703799075248786262967455955596448011482896917054439319688281277461880169025474461808062653993309543533112699040120393568256425725578587856002787067128344084377192697560939947766862764763794610792962397473214022542107683548884263268720275050742732039661445931828848164040245785971233667772268751297204702987696952800040416336343426008108859486871549762586422954430695590841667173334201793579160895779985465515671169991449509609833550576100614771744066666336943710145428569783349696265300270510438869601448339202393860520820767938134777191911696464583249021910242330267537523835912115248036322828425907883516394975229400850550965029635810885645555926565426028004831950532433903567734254627137344962056801432069245173317873904525597066633707561859106884508"}, "radius_squared": "1.7108616479720063224981872192732233089722583670583180195553421990152859845683593498858863197537819167957765422845906592302123374933287589074043342202185196079031835718846906455659879174578949609505067259283429677502636985545290869512994062240172189211973149653085593409839443609780625937003242308274705585162720401523411631328785988363662334753012275346469652536737851907142817140060871913206351609584526283976234288680008112842110537034730221792729780364213962595569454490240491923712425124246229424681105944003562722474916007056939082828695780577398604146427620657970456860650157924249894385920063294207447938816877273229594245075379889380463202925131691783312573239201372908409644702069713564350739280667199799425335134326135763789940600917609939562327046214842705379195684875465743133269494586684428117382514820054928145782649836846079780826386560922517788693686377342074614104619250484133806661226220340479473989189380270296432382660181025958215914926121000064251927979287616815387998197824046766757480385083881646521796111841197613934439848293295165425917571727462029380454393525198002630604111171911671278658329732173946131656603102021312352823760161980071262866717033992363795015058301974015540117191573974611578790559963086167561387273004780704944762610610996912102018428638673733354197976966129764434885727705810144547809619347958670863583713820174609890343855231294468897690424118288092918188114579412512593875629343679017010266649473452717290957510384871296946603835643100239852795256316942358392824441520973391744731296518611650015498139112585187559411292730538506144898996721187963750027530905720338537435247296630669758192366397134426162432270918113645864039864097801871257291577075323699997961301782228133008907460407684056272965789073893341513118372256564870211071561233090187101316856976457244098339308322135514261502016241303837171982223508751889522257604023936001028420996915391808857573092845030853186305706075386098500435908853351682382325552599692770181201406897407433147858662"}
j := {"point": {"x": "1.4132255927253269955912173827528022229671478271484375", "y": "0.60732950398583296358623329069814644753932952880859375"}, "direction": {"x": "-0.64831761232241388939176987999242369930481778602907984358178498055594896357605340011947472862470485588352343454602116303205600676663340113669116627787359552434055596106098392460751755259684338020143887164601150202885800746747476742616516438825622945771322670120968245531479266105583347883394169485231330263260114658882233399227572485511116089703884160006686355647089346501251763337505047948899072573554301054338938849268130442656193889595898540471791321980509438924834521826465513349280379735230509241512994593029899045757238835716812293195360173211596347968494374341661885165356612745241213320731952496091239040008799521583638778392982236709978970453257304772313139051616724603424519305809257968870045506803015406867761533149552946961025666420743537915074748707040324348505275857728645127864399281931111431738658197067091776699735010254549706846312545609630996943251459992066662126998179929374373608634674292166888116952531683716360833413489224259099167857505734370051393477922664081852474689591933102293491358156715159391666855526874239506151684659667861540357811669544187466850527762910353722638502163753207276256797420837742525161856578406213312489294782882866196164639101720058637378308688537213856754695109226008129389577279841889227445014385950576899732635084400288651774985281876711739811098673561009158409947050207924660681120501652857055759369052586767001984114393004262533773217043961933282625926754949885281479521850870691509118170683179671174925959277892216160543691584439358155063912024213055236614943060102840969295187464143352245197736125732831470504007299722363406516268834493450929564933634556626716648025363795576812731240159095149025023369500922943264060193137092184700089862955671478797837420126131709408633734607414364462239012255042226605251133343823679675693488973538707675890656927526682949226476391519431875687709550796311212598827030890604274853422266861571961059872707569979194799247815629718055763432744840202517721876200295877386071724213651262922403464287329736741715404", "y": "-0.46631454823417342615101573396004135396800911920394871375364993757329274845408467638317977201170515620814988130482599846321338987194035619502400573392280784736604613880173687759169969250972825014999263764795036975030825315978636257083879059099409853998119373980165339894089046703581235855661660489923656732394477788108596634590220315118368631819097736244669188525606947811652505034769010847675777361139703254254575685594352347738444507392293947368587519708131322623931100937582887723191165243932494274649153127419818550516674555505063906828870331105634004850635963851709659954345225575672123685204274604642540315687686861728373238343981829730388268582595207797296358960218844948678073969825715355657995997981118211560507836270738919040834297069911667477094390632855644982054727093688454629346134704000959786043726142165461856091666055198454063255958708809722883267479975977325052974189348554479813665101436818143078551503434959289810829094146436218151371030423716875841237626694282424047298533040998258212195274276513067065128713176092313024242489248796452602610686036951024749804784917533919330235623316564986029378656495439027070669711114826720805369662301102085946507299468045251141876156840687213158681290961240433952698603757470448336431123584098096463379788311760503156418929640580829408830660905588819714857979698043823304012120638731912783926669470111678717719603333116628468699143877914082114614431887953357179253122181748207342379565088982898528585991131543934789168276962951349238268444878516316948766119524658927031510045354782854398086388459065247970313955636622967485900746828846030653705926244137999044096441007710042393279290483038936620234183161522405349796724532926971753621069493981576758976085097980307275026450238252596114978544094174975406126814175204938829884302968474747559190725188770276280788652340586612345172096162501196638237200753240153212967474318444374153554604701181023410659882728942562144570391512265302137709242746673471673215475301570661105911917703002561916800919"}}
H := {"x": "0.71654562631676278789524402389812651492383215217878348302869370623951392169427433193466062016263451475458601224385819754878291868779423402479710146923247823800598579922696426610682984665476787288497897180033776981099377804778014371169222731868550658632443278703644617850745492817530723968805129851241825376446200021161130251759705077471599261727324660698647914484274741403708651618930098432556946104770654148605287976271809951883987332738992127317511871832502496271817516957757241702936497682263609544842637298388449652103897910741812718820106763746138254214596334392645798589429691278685202500445907316195001946250134606422653966098040221733904404669311523271709887560834857294054933786711982389094097345753523112906568229286986619958039579064199597743637438754984728893577024957108769436817756837787228408707722040351479188925277805367745653278458462723818783399660486943397260726414189736298666533246984329494958643122862474049142516965532199243601601935100084442916810888484000164661115117686092402509911464230852019772412547000325582507362110767479163447882258717084053336675698048070802194186020741457594484218495940661763831258084174013512547891889910780833783579525224503772488790278651909433708571591652522009869557561634664330800892049216833039931904322010988330892231505313418385471576616448651491059362299386197034274446855529029172531795900379722422776192839980053538124922839789891393475134891386829712544057664563432177249728309580023307664494226045677809209234724875389282565212100216146223895343436093807909302753132655520898616938803282126953373062252057485226393627859728115699080486236751379541634748125418529595883247310544486187508412359430500083008341968388550589994071762864262061598117796542343032494019898849779729069421831091147151660845221165468280132154084485742126676581956895679204474708595765445995685906673429756931365657377153056090658160110875125955675067232087976126362043851573369215126635947210601148512598643873716996757669195679018289070308926174171737971017226", "y": "0.79636921619370061611019653901007344424539924676257658300460943648507923535584014739177033013394466554638426482873540005257519376464329758763524931992645147386119857214993774249501247484830757172487999322804956229722317637309272578670752787393960882246530170159415614512136626761194028187583236872669327314735134136486683458824561813034807914085846612174974560127926188336034656905274903784254314217901699337820355738481040666259973739933624503158572049784733784211466087592072447974840999122389018985278369254660086671074833370979312520224472072952526215924418795431449522675290340240619611135797694704035432328228864866722553316709090901871263288681330204640013913520667584794132699345049932013714427732672950151383084417291593636264177213834578901211602231573347714129092325826179237504547782612520996868206201146405237320656473108744403236057872465715530691180975402628284019035773335973083240600406880620595040840212285433256329232347508590199643977672735295387461708705874296083636399208900840443780899686051379019380346574787215201243412305272659331729827769890426170183595040550745015603679250878744634534353857235095578689304103271579009397877498336740987316374070665055017071629834706060108693979648503134423734869716410278231012283132963118957035595979249477144098873894977180415978505302261809786113495627291568065766909241286320645358811524675031071178806494328047046001708492735527682183153786645936647738222092221521525733646022959329610530016415398458816995371979517625562569960179774393628597728645525323731567627869240822494647624202625582800021541087178790738736997475847796250750405614888063188375280789897498340397704078848949490369798833399721337887512986628683343187085349099050155645518352640440085827423369909218106056297753221587062069257504849622030306720792412165144561326687798967226877052692653142087018444973360513468214915254530308743915234960359533632765531493009126042665029977291755487824893151422180390496747790209438960824698562674979636975693029676384337235061912"}
G := {"x": "-0.5405841456056243038098561612367684063380355998746392762164863212484455898723286544131461528323695256182245737180540387958219170715372673329994860006365612010381707347588594501912033848733535312754314710826590362441503085669331958502900486169815538228612579732432122459022949577737848980422956522646699694344306029155503626054777375785524065878856882203200756606086749293333140390378762730897479737242512132347918799048060682823052287348964404765685591483373767244972090854223235864505145815309153159218615456809926882562107456716594467660953266029630971106208287764543824289202052401416870505097984230934764324995755130519846458912806931715324490706312671368915230165306932354534317249137771056507604438518858249288922262467999673744496018904993453279929314379424011192553001379961567363633302269121683483951924879121116374514821523751298353999427302871736605004025464209533059420187855031866864586421644748984565814291007645715620852847819953508316526437720688690040470236103090252582328555223610019749434789999811895138278203038456248867186009629484483058848003454392435618046660621790431009695859116089506520344530544286892466476352168727938554995632927309938241033687701359531072729233723561592471549106145418932970564140083753046374198852697545134358396646518950969144158905614241263238421150781067968144795556178608164453177668789658713340613912796471539053603225383120383751388741150859025666353039035091077448925322451098008142930841544975856686610461225826562267562876114313722400980968438421324842767782840941109476804524546164293375956536792546203837639688226837811755519439645398858451370575200511142609106135701799373634710386882000542516022161924176628124843687967815530439785419913371672148833931988185114382021402591459415560880613075451121227629166000456755938864140061029548580917982576355808132160557826553837197691830029150072319484138867041635513162829693916790031370928676121227610934324252597998891779349550928544304839030280475407192035483838845640833579308970386929659980946", "y": "-0.7979846324011226225172152913876036516197583234374537950009924339293217168560388935628549933968132650838982042793320148773252570265560608728194044565623488392782724483971710540395338123167277769455106183885574158622786047126195047799277240933308588958801105445611946858920735177087021217439776384369138023540431078025438180578427634805560798156792871579378688372567905201108264026111478665496720224933535536473210526639827185302332739067063433878302366422272345627540473504627897619072097040757998970057573317463668706059349177084068086305473605365626843439901407874528239966446058729892702755731551758686180637509572793076102487084280454789006516817202923762683222885660655225385567754998594816166191205344786549823492853713227659741459941600989584150708934487570881339536943248733064975987566909370384831025870220197032570134977594184246889690572400301685675344977576860262808229258717264192504591513981175949242476208059010943347102239560046589953510492761338972430546448647907281555806378871009509033337383427957544844781876968276436020528256339892588430688072349340071789377681456060205398406834468655303251564436330217656926806283897603501998821804827435385770211574054275199677562775072407931075701381729522371050532494185890389701799246493407598150497572525934911911192896022965793834108878639376562554923760338050948923616125307986619087066225398080240787136512851451157175712005574134256688168754385395121879895533725529527589221585924794946428045084215367097768526537440550101485464079322891863657696328080491571942467335544537502594409405975393905600080832672686852016217718973743099525172845908861391181683334346668403587158321791559970931031342339982899019219667101152201229543488133332673887420290857139566699392530600541020877739202896678404787721041641535876269554383823392929166498043820484660535075047671824230496072645656851815767032789950458801701101930059271621771291111853130852056009663901064867807135468509254274689924113602864138490346635747809051194133267415123718213769016"}

Need to prove:
concyclic(B, F, G, H)

Proof:
By line_definition on F, G, j we get j == Line(F, G)
By line_definition on D, A, i we get i == Line(A, D)
By line_definition on B, F, g we get g == Line(B, F)
By line_definition on F, C, g we get g == Line(C, F)
By line_definition on A, F, perpendicular_line(A, g) we get Line(A, F) == perpendicular_line(A, g)
By line_definition on G, A, j we get j == Line(A, G)
By line_definition on C, D, h we get h == Line(C, D)
By angles_on_chord on G, C, A, D, c we get equal_mod_180(G, A, C, G, D, C)
By angles_on_chord on C, D, G, A, c we get equal_mod_180(C, G, D, C, A, D)
By angles_on_chord on G, A, C, H, c we get equal_mod_180(G, C, A, G, H, A)
By angles_on_chord on C, F, E, H, d we get equal_mod_180(C, E, F, C, H, F)
By angles_on_chord on G, C, H, A, c we get equal_mod_180(G, H, C, G, A, C)
By angles_on_chord on C, D, A, H, c we get equal_mod_180(C, A, D, C, H, D)
By angles_on_chord on A, D, C, H, c we get equal_mod_180(A, C, D, A, H, D)
By between_implies_orientation on G, A, E, C we get orientation(A, E, G) == orientation(C, G, E) mod 360, orientation(A, C, G) == orientation(A, E, G) mod 360
By between_implies_orientation on B, C, E, A we get orientation(A, B, E) == orientation(B, C, E) mod 360, orientation(A, B, C) == orientation(B, C, E) mod 360
By between_implies_orientation on D, A, E, C we get orientation(A, E, D) == orientation(C, D, E) mod 360, orientation(A, C, D) == orientation(A, E, D) mod 360
By between_implies_orientation on F, C, E, A we get orientation(A, F, E) == orientation(C, E, F) mod 360, orientation(A, F, C) == orientation(C, E, F) mod 360
By in_imply_collinear on F, B, C we get collinear(B, C, F)
By reverse_orientation on H, G, C we get orientation(C, H, G) == 0 - orientation(C, G, H) mod 360
By reverse_orientation on C, D, G we get orientation(C, D, G) == 0 - orientation(C, G, D) mod 360
By reverse_orientation on A, H, G we get orientation(A, H, G) == 0 - orientation(A, G, H) mod 360
By double_perpendicular_and_parallel_v0_r on g, perpendicular_line(A, g), i we get perpendicular(i, perpendicular_line(A, g))
By reverse_orientation on H, C, F we get orientation(C, F, H) == 0 - orientation(C, H, F) mod 360
By reverse_orientation on C, D, H we get orientation(C, D, H) == 0 - orientation(C, H, D) mod 360
By reverse_orientation on H, A, D we get orientation(A, D, H) == 0 - orientation(A, H, D) mod 360
By collinear_definition on C, A, E we get A in Line(C, E), E in Line(A, C), Line(A, C) == Line(C, E), 0 == 2 * angle(A, C, E) mod 360
By same_angle on C, F, B, E we get equal_mod_180(F, C, E, B, C, E)
By reverse_direction on C, A we get 180 == direction(C, A) - direction(A, C) mod 360
By perpendicular_direction_conditions_v0_r on G, F, F, C we get 180 == 2 * direction(G, F) - 2 * direction(F, C) mod 360
By perpendicular_angle_conditions_v0 on B, F, G we get angle(B, F, G) == orientation(B, F, G) mod 360
By perpendicular_angle_conditions_v0 on A, F, C we get angle(A, F, C) == orientation(A, F, C) mod 360
By perpendicular_angle_conditions_v0 on G, A, D we get angle(G, A, D) == orientation(A, D, G) mod 360
By perpendicular_angle_conditions_v0 on D, A, F we get angle(D, A, F) == orientation(A, F, D) mod 360
By right_triangle_circumcenter_v1 on C, F, A we get midpoint(A, C) == circumcenter(A, C, F)
By from_equality_mod_180_v1 on C, G, D, C, A, D we get angle(C, G, D) == angle(C, A, D) + 180 mod 360
By from_equality_mod_180_v0 on C, E, F, C, H, F we get angle(C, E, F) == angle(C, H, F) mod 360
By from_equality_mod_180_v0 on G, C, A, G, H, A we get angle(G, C, A) == angle(G, H, A) mod 360
By from_equality_mod_180_v0 on A, C, D, A, H, D we get angle(A, C, D) == angle(A, H, D) mod 360
By from_equality_mod_180_v0 on C, A, D, C, H, D we get angle(C, A, D) == angle(C, H, D) mod 360
By from_equality_mod_180_v0 on G, H, C, G, A, C we get angle(G, A, C) == angle(G, H, C) mod 360
By from_equality_mod_180_v0 on G, A, C, G, D, C we get angle(G, A, C) == angle(G, D, C) mod 360
By parallelogram_parallel_definition on B, C, D, A we get parallelogram(A, B, C, D)
By angle_to_center on C, A, F, Circle(A, C, F) we get 2 * angle(C, A, F) == angle(C, center(Circle(A, C, F)), F) mod 360
By from_equality_mod_180_v1 on F, C, E, B, C, E we get angle(F, C, E) == angle(B, C, E) + 180 mod 360
By reverse_direction on D, A we get 180 == direction(D, A) - direction(A, D) mod 360
By sss_congruence on A, C, D, C, A, B we get congruent_triangles(A, B, C, C, D, A)
By reverse_direction on D, G we get 180 == direction(D, G) - direction(G, D) mod 360
By reverse_direction on G, F we get 180 == direction(G, F) - direction(F, G) mod 360
By reverse_direction on C, B we get 180 == direction(C, B) - direction(B, C) mod 360
By reverse_direction on F, B we get 180 == direction(F, B) - direction(B, F) mod 360
By similar_triangle_basic_properties on A, F, B, C, F, G we get not_collinear(A, B, F), not_collinear(C, F, G), angle(A, F, B) == angle(C, F, G) mod 360, angle(F, B, A) == angle(F, G, C) mod 360, angle(B, A, F) == angle(G, C, F) mod 360, log(distance(A, F)) + log(distance(F, G)) == log(distance(C, F)) + log(distance(B, F)), log(distance(B, F)) + log(distance(C, G)) == log(distance(F, G)) + log(distance(A, B)), log(distance(A, B)) + log(distance(C, F)) == log(distance(C, G)) + log(distance(A, F))
By sas_similarity on G, F, B, C, F, A we get similar_triangles(A, C, F, B, G, F)
By to_equality_mod_180_v2 on G, H, F, G, B, F we get equal_mod_180(G, H, F, G, B, F)
By concyclic_sufficient_conditions on G, H, F, B we get concyclic(B, F, G, H)
