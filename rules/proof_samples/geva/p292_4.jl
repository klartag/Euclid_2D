Assumptions:
A, B, C, D: Point
distinct(A, B, C, D)
not_collinear(A, B, C)
between(A, D, C)
80 == angle(B, A, C) mod 360
45 == angle(A, C, B) mod 360
115 == angle(B, D, C) mod 360

Embedding:
C := {"x": "0.1338648488074974107764347763804835267364978790283203125", "y": "0.990999597504330864694566116668283939361572265625"}
B := {"x": "-0.9143484216470041392454959350288845598697662353515625", "y": "-0.404928344070444590219182146029197610914707183837890625"}
A := {"x": "-1.303689777378266354093241613373662828704731571040379010548789405127366896742502108302710317924147620994524405836552358716359709297995499854376139424786136168931329878348863576299519196782060404319766896555781537880600013521065640720393073047151912392858066679581549365732182748124372604427442688206466226328615900098974931799617223058951185555311179458274567234018020204781978242170367491685456280682971900628838359185079458901466292034699131609227238406894878532977990791697251130780341907766589627006528604216562155917741936961330747540385973650350530346166864413739997631621634093441431533618904789584800339712928832170019768283091427709392489577094687963642204512528628480059117545586445065809127368662417535910694876234523030643003923141408548196821940423838424482624297463634567556694553502000154685806238015693578481691834604575891276263406995841290964426005149723119191653007559999109119470176449212250338078759643950447823258944716718662729715252474144112919199755096267411275794342882829708635654647191328602341172226283108339864061512990767137966958991463498902803355995093942902643765455922801312879876120003943058426214530746322915604781894124250112768555219321931520634708381700472730619549537182803477794489798197517147350867206939097026030227482990023285489751284109227920017187654929798158819529907695348056851319041607098806114428747436780904522977376611392066511475116733149674077950005694285115919300305780607905291202962842727599355837259626527333545955240422839274445384548482466020850782754848540078791600658412766762887364298203147504747312709323598274250253432212350422320958825115359563459806052066424544657647981107006096455713022035157368037105038236873797816371189362779037739625456994023491399951096777031974663490408721798598448188816160093310545926460363893505429556640821872786743812938717182216514971782574306031968000616590268685631140148479599228391305577837727970738715024662501913256284787099923429766749161387606964712285446104295852254317740285921078631097245", "y": "0.7864865228908565224120997478995478586716366166295997044679531965643061492071444523108658037684176953895067097280436358498566367913838895455887901743424258390115991504470832408992294999720126424663145520828431448425990920320051704826943849111502584661621526146533331427888246510155882275166531678642760408167191014438082849418654244563797763675961846116886054851032922852694145695795026058234026682421894183563061752083072724614811060262473781435134528065266694055024853777078421334897406052241734851014788296438308020997769957630869079226546877348387248301043849499893563470605347380822800396044223689083882865956114488270261176983293842456010261817556553584335873584079873790292114965456647825829787310745561383733296007150212070068005637750998735814126049806958618633554471784786385493737722836010716453625909279031926155273976742726262857658231934678675824006527801885503297126098878679872339403838233521492994714748926107494439411493559005885088683834466071433951439589839640137607896832900902666448742595808604484859067884587815441400617857866413960187820213163239020693116777766465228316121038835269822291038532750755405726798657859801914341509361707900835922773665398461220494714913976727329316612356151682139882687355051090386069621615320588252574479204385380136686628481772283237232248547411156762316776635715342037970325151635048719135932943371882685977628097449457190632803713693120471713287627896169427866415401525383339707693471765793811985048632642267164792990528413522356221219346442222712397228626862252745661014813998510035739761616470910355434703483165998331501008028877100565561495561178778035720539549617468394674159040053793417634430783745648183574119105450382487397076805768253557232378313567484042818265982738198548597253195623130256524799973708499227605464968163688588998198008835279160096693010747506285380919170806932074925786632614723144895246763983855987504213939998337635042284420404802488997723130714050535721174618769908232317661421760533163646693745015194231733846078"}
D := {"x": "-0.51834487481639507361781738639903208303543249403629630595914410512939248648102594873560879287069439296057385806697693254308489851663177100840680133018651427875762595068390634325352541277890790396923336195855843444261214046498199976325756726947437555566567486801653256626180874961457977127960397872795282694566342994477771229269027714747060240050778106617922961298651399445897717935878499836162260541002873242657610541785260172512622741814650914607938612837355887990731897637223449399433104674954285707955027660623659925274680426757278872635639177556082907976268008353630589194091823478265281836179078561012416543412103929642122331732918885565073018124895569592208552073006000373464577658730751535832403001184990726074109789270972965831836593342316365775704632543076595789944833486181041851080049816893423950023912869516906621911518267215776172933070636669901433721602103898192214000904959400675248120140774985656764517702441161054568117203401734282467439855317816852478185355665141705251830748796213568177333129988032638607112217532610112522688747016668599701024320210328786851605103903298862442962252495188933874637703612955641931677115135116169151741139122187116251228206014613182923771999214997437797514330849416932860162846293677879226327327310814013783763493856362287383740568883508778865204492789896714892025192009221327055791630658742403962758636252946435875619894542046418992386218002308652748789769374029860049351750134089310054454583489632217336986171980390121250326701967943895344886801556884684154643259824601989991159372892757688608300789102210560444830807288098502114867996078446994018052620561864174787438361595329639987282149236872598324403248507072270454512750993847066060960406213621633494495122014113762677832794124040100696127720538289585171428114755748536902984183940673988361423096319346207542620591982305917007796608546302707863015393414194651590858385129834421149442753780046538126821665588216065768864220602254926038856495972705636027508189037314169794804255846677199234285898", "y": "0.89821326894230913506796185835900096599820795128125763002429382242928626402130857309660131585476237837702472566777393367797316351239384881130106110845878782656678992708035601596360992828955814469480876680657437593295529440816262060178616272760596238175371986502242941292585957796671819191944991793931055742862299591419851505147649247863403580383552434519229850128226072523616890620683198212149250131041246089922176170823571564369478757622934851279252415840944559694773489175817833104709003371492158515261616399365236467519266228935113829881354915748131799599981041969315921285746308295574660639986200194603785799066523702657448305677872360251022496039344576768263265358633065275254659210743872322551368002274232695389849346373289176447280241302201067175790626750836746148405045648504728219164913540895699356540566023969693722462436778487362415502166704425031263318150852432962694844530682176265095243868917908120040701225773397761072622613589671421442102442786821108066363662352845007260135298314627664737656419660254168955111334291297580079950916030957042426056662698192589643891688026599087933213818327691779294365544407374685840917550312555497002678510056083982664745542998364483904423316330534295436482299446568111065439251694765143527753179030460857156310334236121321329596138579670916888650572853230490590449066735469407446377134320498167625644004897034328442636667661635328526524870308228226296678511820024572494751448141600633977717498407192663636133147561597869205072145687122493537964116198694344530710902847690988932740667333935585284332778210129706985463228154889911452202042888896824885685836807723819055822230696859478310418775372540814320186699573221497470386148002016800916585516448860252526354189012786530363915293821593803042673976003965872646065139496177089152724576230427432167417939431485120528912758294565612876260452316736653972655029460532407500451010054981308831158933286307961995140346185872071372883339226420812229390889236796510112799016012699302962182855299324453333950377"}

Need to prove:
35 == angle(D, B, A) mod 360

Proof:
By reverse_direction on C, A we get 180 == direction(C, A) - direction(A, C) mod 360
By reverse_direction on B, A we get 180 == direction(B, A) - direction(A, B) mod 360
By reverse_direction on D, B we get 180 == direction(D, B) - direction(B, D) mod 360
By reverse_direction on D, C we get 180 == direction(D, C) - direction(C, D) mod 360
By between_implies_angles on A, D, C we get 180 == angle(A, D, C) mod 360, 0 == angle(D, C, A) mod 360, 0 == angle(C, A, D) mod 360
