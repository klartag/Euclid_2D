line_definition:
  inputs:
    - A, B: Point
    - l: Line
  where:
    - A in l
    - B in l
  where_embedding:
    - A != B
  conclude:
    - l == Line(A, B)
  rank: 5

line_uniqueness:
  inputs:
    - A, B: Point
    - l1, l2: Line
  where:
    - A, B in l1
    - A, B in l2
  where_embedding:
    - A != B
  conclude:
    - l1 == l2
  rank: 3
  trivial_if_equal:
    - [l1, l2]

line_intersection_definition:
  inputs:
    - A: Point
    - k, l: Line
  where:
    - A in k, l
  where_embedding:
    - k != l
  conclude:
    - A == line_intersection(k, l)
  rank: 5

line_unique_intersection:
  inputs:
    - l, m: Line
    - P, Q: Point
  where:
    - P, Q in m
    - P, Q in l
  where_embedding:
    - l != m
  conclude:
    - P == Q
  rank: 3

concurrent_sufficient_conditions:
  inputs:
    - k, l, m: Line
  where:
    - line_intersection(k, m) == line_intersection(m, l)
  where_embedding:
    - distinct(k, l, m)
  conclude:
    - concurrent(k, m, l)
  rank: 5
